module pooling_buffer #(parameter BIT_WIDTH = 32, SIZE = 2)(
    input clk,
    input en,
    input signed[BIT_WIDTH-1:0] in1, in2,
    output reg signed[BIT_WIDTH-1:0] matrix[0:1][0:SIZE-1]
);

    integer i;

    always @(posedge clk) begin
        if (en) begin
            for (i = SIZE-1; i > 0; i = i-1) begin
                matrix[0][i] <= matrix[0][i-1];
                matrix[1][i] <= matrix[1][i-1];
            end
            matrix[0][0] <= in1;
            matrix[1][0] <= in2;
        end
    end

endmodule